{"ast":null,"code":"var _jsxFileName = \"/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\"; // import moment from 'moment';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItineraryForm = () => {\n  _s();\n\n  var _errors$tripName;\n\n  const [minEndDate, setMinDate] = useState(new Date());\n  let navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      startDate: new Date(),\n      endDate: new Date(),\n      tripName: \"\",\n      invite: \"\"\n    }\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    e.target.reset();\n    console.log(data);\n    alert(JSON.stringify(data));\n    navigate('/');\n    return;\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ItineraryForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Start a New Adventure!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Trip Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"tripName\", {\n            required: \"Trip Name is Required...\",\n            minLength: {\n              value: 3,\n              message: \"Trip Name must be atleast 3 characters long...\"\n            },\n            maxLength: {\n              value: 30,\n              message: \"Trip Name must be atmost 30 characters long...\"\n            }\n          }),\n          placeholder: \"Trip to...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$tripName = errors.tripName) === null || _errors$tripName === void 0 ? void 0 : _errors$tripName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"startDate\",\n          rules: {\n            required: true\n          },\n          render: _ref => {\n            let {\n              field\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n              className: \"input\",\n              placeholderText: \"Select Start Date\",\n              onChange: e => {\n                field.onChange(e);\n                setMinDate(e);\n              },\n              selected: field.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.startDate && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Start Date is Required...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"endDate\",\n          rules: {\n            required: true\n          },\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n              className: \"input\",\n              placeholderText: \"Select End Date\",\n              onChange: e => field.onChange(e),\n              selected: field.value,\n              minDate: minEndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.endDate && errors.endDate.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" End Date is Required...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Invite People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"invite\"),\n            placeholder: \"Invite...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          className: \"button\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItineraryForm, \"jTzvTNbYmzt8lTXhVL0JZHg3z4Q=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ItineraryForm;\nexport default ItineraryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItineraryForm\");","map":{"version":3,"names":["useForm","Controller","ReactDatePicker","useNavigate","useState","ItineraryForm","minEndDate","setMinDate","Date","navigate","register","handleSubmit","formState","errors","control","mode","defaultValues","startDate","endDate","tripName","invite","onSubmit","data","e","preventDefault","target","reset","console","log","alert","JSON","stringify","required","minLength","value","message","maxLength","field","onChange","type"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js"],"sourcesContent":["import { useForm, Controller} from \"react-hook-form\";\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import moment from 'moment';\n\nconst ItineraryForm = () => {\n\n  const [minEndDate, setMinDate] = useState(new Date());\n\n  let navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      startDate: new Date(),\n      endDate: new Date(),\n      tripName: \"\",\n      invite: \"\",\n    }\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    e.target.reset();\n    console.log(data);\n    alert(JSON.stringify(data));\n    navigate('/');\n    return;\n  };\n\n  console.log(errors);\n\n  return (\n    <div className=\"ItineraryForm\">\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\" className=\"form\">\n        <fieldset>\n        <h2>Start a New Adventure!</h2>\n        <label>Trip Name</label>\n        <input\n          {...register(\"tripName\", {\n            required: \"Trip Name is Required...\",\n            minLength: {\n              value: 3,\n              message: \"Trip Name must be atleast 3 characters long...\",\n            },\n            maxLength: {\n              value: 30,\n              message: \"Trip Name must be atmost 30 characters long...\",\n            },\n          })}\n          placeholder=\"Trip to...\"\n        />\n        <p>{errors.tripName?.message}</p>\n        <label>Start Date</label>\n          <Controller\n            control={control}\n            name=\"startDate\"\n            rules = {{ required: true }}\n            render={({ field }) => (\n              <ReactDatePicker\n                className=\"input\"\n                placeholderText=\"Select Start Date\"\n                onChange={(e) => {field.onChange(e);\n                                  setMinDate(e); }}\n                selected={field.value}\n              />\n              )}\n          />\n          <p>{errors.startDate && (<span> Start Date is Required...</span>)}</p>\n          <label>End Date</label>\n          <Controller\n            control={control}\n            name=\"endDate\"\n            rules = {{ \n              required: true\n            }}\n            render={({ field }) => (\n              <ReactDatePicker\n                className=\"input\"\n                placeholderText=\"Select End Date\"\n                onChange={(e) => field.onChange(e)}\n                selected={field.value}\n                minDate={minEndDate}\n              />\n              )}\n          />\n          <p>{errors.endDate && errors.endDate.type === \"required\" && (<span> End Date is Required...</span>)}</p>\n          <div>\n            <label>Invite People</label>\n            <textarea {...register(\"invite\")} placeholder=\"Invite...\"/>\n          </div>\n        <button type=\"Submit\" className=\"button\">Create</button>\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nexport default ItineraryForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}