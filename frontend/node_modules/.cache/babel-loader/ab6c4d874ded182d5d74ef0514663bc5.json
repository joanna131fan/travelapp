{"ast":null,"code":"var _jsxFileName = \"/Users/joannafan/Downloads/travelapp-main/frontend/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\"; // In the React application, create a registration form with fields for the user's email, password, and any other information that you want to collect.\n// Create a login form with fields for the user's email and password.\n// Create a form submission handler for each form that will send a POST request to the backend with the form data.\n// On the Node.js backend, create a route for each form submission that will handle the incoming data.\n// In the route handlers, you can then validate the form data, and then save the data to a database, or authenticate the user.\n// Once the user is authenticated, you can use JSON Web Token (JWT) to maintain the user's session.\n// You also need to use CORS middleware to handle cross-origin resource sharing (CORS) issues between the React frontend and the Node.js backend.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  var _errors$userName, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    }\n  }); // POST FORM DATA: https://bosctechlabs.com/send-form-data-using-axios-post-request-react/\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const newUser = await axios.post(\"/signup\", {\n        username: getValues(\"userName\"),\n        email: getValues(\"email\"),\n        password: getValues(\"password\"),\n        confirm_password: getValues(\"confirm_password\")\n      });\n      console.log(e);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"userName\", {\n          required: \"Username is Required...\",\n          minLength: {\n            value: 3,\n            message: \"Username must be at least 3 characters long...\"\n          },\n          maxLength: {\n            value: 20,\n            message: \"Username must be at most 20 characters long...\"\n          }\n        }),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$userName = errors.userName) === null || _errors$userName === void 0 ? void 0 : _errors$userName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: \"Email is Required...\",\n          pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: \"Email must be valid\"\n          }\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n          required: \"Password is Required...\",\n          pattern: {\n            value: /^(?=.*[0-9])(?=.*[!@#$%^&*.,])[a-zA-Z0-9!@#$%^&*.,]{6,50}$/,\n            message: \"Password Must Contain Between 6-50 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n          }\n        }),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"confirm_password\", {\n          required: \"Password is Required...\",\n          pattern: {\n            value: /^(?=.*[0-9])(?=.*[!@#$%^&*.,])[a-zA-Z0-9!@#$%^&*.,]{6,50}$/,\n            message: \"Password Must Contain Between 6-50 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n          }\n        }),\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"1L4wGgFfcLEDJzIF6A/KwaUT/c0=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useForm","axios","RegisterForm","register","handleSubmit","getValues","formState","errors","mode","defaultValues","userName","email","password","confirm_password","onSubmit","e","preventDefault","newUser","post","username","console","log","err","required","minLength","value","message","maxLength","pattern"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/src/components/RegisterForm.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\n// In the React application, create a registration form with fields for the user's email, password, and any other information that you want to collect.\n\n// Create a login form with fields for the user's email and password.\n\n// Create a form submission handler for each form that will send a POST request to the backend with the form data.\n\n// On the Node.js backend, create a route for each form submission that will handle the incoming data.\n\n// In the route handlers, you can then validate the form data, and then save the data to a database, or authenticate the user.\n\n// Once the user is authenticated, you can use JSON Web Token (JWT) to maintain the user's session.\n\n// You also need to use CORS middleware to handle cross-origin resource sharing (CORS) issues between the React frontend and the Node.js backend.\nfunction RegisterForm() {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n    }\n  });\n\n  // POST FORM DATA: https://bosctechlabs.com/send-form-data-using-axios-post-request-react/\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newUser = await axios.post(\"/signup\", {\n        username: getValues(\"userName\"),\n        email: getValues(\"email\"),\n        password: getValues(\"password\"),\n        confirm_password: getValues(\"confirm_password\")\n      });\n      console.log(e);\n    }\n    catch(err) {\n      console.log(err);\n    }\n  }\n\n  console.log(errors);\n\n  return (\n    <div className=\"RegisterForm\">\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <h2>Create an account</h2>\n        <input\n          {...register(\"userName\", {\n            required: \"Username is Required...\",\n            minLength: {\n              value: 3,\n              message: \"Username must be at least 3 characters long...\",\n            },\n            maxLength: {\n              value: 20,\n              message: \"Username must be at most 20 characters long...\",\n            },\n          })}\n          placeholder=\"Username\"\n        />\n        <p>{errors.userName?.message}</p>\n        <input\n          {...register(\"email\", {\n            required: \"Email is Required...\",\n            pattern: {\n              value:\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"Email must be valid\",\n            },\n          })}\n          placeholder=\"Email\"\n        />\n        <p>{errors.email?.message}</p>\n        <input\n          {...register(\"password\", {\n            required: \"Password is Required...\",\n            pattern: {\n              value:\n                /^(?=.*[0-9])(?=.*[!@#$%^&*.,])[a-zA-Z0-9!@#$%^&*.,]{6,50}$/,\n              message:\n                \"Password Must Contain Between 6-50 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            },\n          })}\n          placeholder=\"Password\"\n        />\n        <p>{errors.password?.message}</p>\n        <input \n          {...register(\"confirm_password\", {\n            required: \"Password is Required...\",\n            pattern: {\n              value:\n              /^(?=.*[0-9])(?=.*[!@#$%^&*.,])[a-zA-Z0-9!@#$%^&*.,]{6,50}$/,\n              message:\n                \"Password Must Contain Between 6-50 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            }\n          })}\n          placeholder=\"Confirm Password\"\n          />\n        <input type=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}