{"ast":null,"code":"var _jsxFileName = \"/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker'; // import moment from \"moment\";\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItineraryForm = () => {\n  _s();\n\n  const initialFormData = {\n    tripName: '',\n    startDate: new Date(),\n    endDate: new Date(),\n    people: ''\n  };\n\n  function isRequired(value) {\n    return value != null && value.trim().length > 0;\n  }\n\n  const validations = [_ref => {\n    let {\n      tripName\n    } = _ref;\n    return isRequired(tripName) || {\n      tripName: \"Trip Name is Required\"\n    };\n  }, _ref2 => {\n    let {\n      startDate,\n      endDate\n    } = _ref2;\n    return !startDate || !endDate || startDate.getDate() <= endDate.getDate() || {\n      endDate: \"End Date is not valid\"\n    };\n  }];\n\n  const onSubmit = () => {};\n\n  function validate(validations, values) {\n    const errors = validations.map(validation => validation(values)).filter(validation => typeof validation === 'object');\n    return {\n      isValid: errors.length === 0,\n      errors: errors.reduce((errors, error) => ({ ...errors,\n        ...error\n      }), {})\n    };\n  }\n\n  const {\n    isValid: initialIsValid,\n    errors: initialErrors\n  } = validate(validations, initialFormData);\n  const [formData, setFormData] = useState(initialFormData);\n  const [formSuccess, setFormSuccess] = useState('');\n  const [formErrors, setFormErrors] = useState(initialErrors);\n  const [isValid, setValid] = useState(initialIsValid);\n  const [touched, setTouched] = useState({});\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    onSubmit(formData);\n  }; // const handleErrors = (err) => {\n  //     if(err.response.data && err.response.data.errors) {\n  //         // Handle validation errors\n  //         const { errors } = err.response.data;\n  //         // Generate an array of error messages using Array.map()\n  //         const errorMsg = errors.map((error) => {\n  //             return error.msg\n  //           });\n  //         setFormErrors(errorMsg);\n  //     } else {\n  //         // Handle generic error\n  //         setFormErrors(['Oops, there was an error!']);\n  //     }\n  // };\n\n\n  const handleChange = e => {\n    const newFormData = { ...formData,\n      [e.target.id]: e.target.value\n    };\n    const {\n      isValid,\n      errors\n    } = validate(validations, newFormData);\n    setFormData(newFormData);\n    setFormErrors(errors);\n    setFormSuccess('');\n    setValid(isValid);\n    setTouched({ ...touched,\n      [e.target.name]: true\n    });\n  };\n\n  const handleDateChange = (date, dateType) => {\n    setFormData({ ...formData,\n      [dateType]: date\n    });\n    setFormErrors([]);\n    setFormSuccess('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ItineraryForm\",\n    children: [formErrors.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-errors\",\n      children: formErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start a new trip!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"tripName\",\n            className: \"input\",\n            placeholder: \"trip to...\",\n            value: formData.tripName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: formData.startDate,\n            onChange: date => handleDateChange(date, 'startDate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: formData.endDate,\n            minDate: new Date(formData.startDate),\n            onChange: date => handleDateChange(date, 'endDate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"People (Change to invite people later)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"people\",\n            className: \"input\",\n            placeholder: \"going with...\",\n            value: formData.people,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          disabled: isValid,\n          onClick: handleSubmit,\n          children: \"Create Trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), formSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItineraryForm, \"IIUebyU+JNKPV28NETvi/XAJnX4=\");\n\n_c = ItineraryForm;\nexport default ItineraryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItineraryForm\");","map":{"version":3,"names":["React","useState","axios","DatePicker","ItineraryForm","initialFormData","tripName","startDate","Date","endDate","people","isRequired","value","trim","length","validations","getDate","onSubmit","validate","values","errors","map","validation","filter","isValid","reduce","error","initialIsValid","initialErrors","formData","setFormData","formSuccess","setFormSuccess","formErrors","setFormErrors","setValid","touched","setTouched","handleSubmit","e","preventDefault","handleChange","newFormData","target","id","name","handleDateChange","date","dateType","index"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport DatePicker from 'react-datepicker';\n// import moment from \"moment\";\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\nconst ItineraryForm = () => {\n    const initialFormData = {\n        tripName: '',\n        startDate: new Date(),\n        endDate: new Date(),\n        people:'',\n    };\n\n    function isRequired(value) {\n        return value != null && value.trim().length > 0;\n      }\n\n    const validations = [\n        ({tripName}) => isRequired(tripName) || {tripName: \"Trip Name is Required\"},\n        ({startDate, endDate}) => (!startDate || !endDate) || startDate.getDate() <= endDate.getDate() || {endDate: \"End Date is not valid\"}\n    ];\n\n    const onSubmit = () => {};\n\n    function validate(validations, values) {\n        const errors = validations\n          .map(validation => validation(values))\n          .filter(validation => typeof validation === 'object');\n        return {isValid: errors.length === 0, errors: errors.reduce((errors, error) => ({...errors, ...error}), {})};\n      }\n    \n    const {isValid: initialIsValid, errors: initialErrors} = validate(validations, initialFormData);\n    const [formData, setFormData] = useState(initialFormData);\n    const [formSuccess, setFormSuccess] = useState('');\n    const [formErrors, setFormErrors] = useState(initialErrors);\n    const [isValid, setValid] = useState(initialIsValid);\n    const [touched, setTouched] = useState({});\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        onSubmit(formData);\n    };\n    \n    // const handleErrors = (err) => {\n    //     if(err.response.data && err.response.data.errors) {\n    //         // Handle validation errors\n    //         const { errors } = err.response.data;\n\n    //         // Generate an array of error messages using Array.map()\n    //         const errorMsg = errors.map((error) => {\n    //             return error.msg\n    //           });\n\n    //         setFormErrors(errorMsg);\n    \n    //     } else {\n    //         // Handle generic error\n    //         setFormErrors(['Oops, there was an error!']);\n    //     }\n    // };\n\n    const handleChange = (e) => {\n        const newFormData = {...formData, [e.target.id]: e.target.value};\n        const {isValid, errors} = validate(validations, newFormData);\n        setFormData(newFormData);\n        setFormErrors(errors);\n        setFormSuccess('');\n        setValid(isValid);\n        setTouched({...touched, [e.target.name]: true});\n    };\n\n    const handleDateChange = (date, dateType) => {\n        setFormData({\n          ...formData,\n          [dateType]: date,\n        });\n        setFormErrors([]);\n        setFormSuccess('');\n      };\n\n    return (\n        <div className='ItineraryForm'>\n            {formErrors.length >1 && (\n                <div className='form-errors'>\n                    {formErrors.map((error, index) => (\n                        <p key={index}>{error}</p>\n                    ))}\n                </div>\n            )}\n            <form onSubmit={handleSubmit} className = 'form'>\n                \n                <fieldset>\n                    <div>\n                        <label>Start a new trip!</label>\n                            <input \n                                type='text'\n                                id='tripName'\n                                className=\"input\"\n                                placeholder='trip to...'\n                                value={formData.tripName}\n                                onChange={handleChange}\n                                required/>\n                    </div>\n                    <div>\n                        <label>Start Date</label>\n                            <DatePicker\n                                selected={formData.startDate}\n                                onChange={(date) => handleDateChange(date, 'startDate')}/>\n                    </div>\n                    <div>\n                        <label>End Date </label>\n                            <DatePicker\n                                selected={formData.endDate}\n                                minDate={new Date(formData.startDate)}\n                                onChange={(date) => handleDateChange(date, 'endDate')}/>\n                    </div> \n                    <div>\n                        <label>People (Change to invite people later)</label>\n                            <textarea\n                                type='text'\n                                id='people'\n                                className=\"input\"\n                                placeholder='going with...'\n                                value={formData.people}\n                                onChange={handleChange}/>\n                    </div>\n                    <button className=\"button\" type=\"submit\" disabled={isValid} onClick={handleSubmit}>\n                        Create Trip\n                    </button>\n                </fieldset>\n                {formSuccess && <p>{formSuccess}</p>}\n            </form>\n        </div>\n    )\n}\nexport default ItineraryForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}