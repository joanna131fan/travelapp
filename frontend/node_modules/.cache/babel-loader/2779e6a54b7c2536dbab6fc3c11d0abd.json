{"ast":null,"code":"var _jsxFileName = \"/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItineraryForm = () => {\n  _s();\n\n  var _errors$tripName;\n\n  const {\n    watch\n  } = useForm();\n  const startDate = watch(\"startDate\");\n  const endDate = watch(\"endDate\");\n  const validations = {\n    tripName: {\n      required: \"Trip Name is Required...\",\n      minLength: {\n        value: 3,\n        message: \"Trip Name must be atleast 3 characters long...\"\n      },\n      maxLength: {\n        value: 30,\n        message: \"Trip Name must be atmost 30 characters long...\"\n      }\n    },\n    startDate: {\n      required: \"Start date is required\"\n    },\n    endDate: {\n      required: \"End date is required\",\n      validate: value => {\n        if (value && startDate && value < startDate) {\n          return \"End date must be after start date\";\n        }\n      }\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({\n    validationSchema: validations,\n    mode: \"onBlur\",\n    defaultValues: {\n      StartDatepicker: new Date(),\n      TextField: \"\"\n    }\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    e.target.reset();\n    console.log(data);\n    alert(JSON.stringify(data));\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ItineraryForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Start a New Adventure!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Trip Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register,\n          placeholder: \"Trip to...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$tripName = errors.tripName) === null || _errors$tripName === void 0 ? void 0 : _errors$tripName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"StartDatepicker\",\n          ref: register,\n          render: _ref => {\n            let {\n              field\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n              className: \"input\",\n              placeholderText: \"Select Start date\",\n              onChange: e => field.onChange(e),\n              selected: field.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          className: \"button\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItineraryForm, \"qVBpNiOlV83dyuab4eEOx7rSdCo=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = ItineraryForm;\nexport default ItineraryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItineraryForm\");","map":{"version":3,"names":["useForm","Controller","ReactDatePicker","ItineraryForm","watch","startDate","endDate","validations","tripName","required","minLength","value","message","maxLength","validate","register","handleSubmit","formState","errors","control","validationSchema","mode","defaultValues","StartDatepicker","Date","TextField","onSubmit","data","e","preventDefault","target","reset","console","log","alert","JSON","stringify","field","onChange"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/src/components/ItineraryForm.js"],"sourcesContent":["import { useForm, Controller} from \"react-hook-form\";\nimport ReactDatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ItineraryForm = () => {\n\n  const { watch } = useForm();\n  const startDate = watch(\"startDate\");\n  const endDate = watch(\"endDate\");\n  const validations = {\n    tripName: {\n      required: \"Trip Name is Required...\",\n      minLength: {\n        value: 3,\n        message: \"Trip Name must be atleast 3 characters long...\",\n        },\n        maxLength: {\n          value: 30,\n          message: \"Trip Name must be atmost 30 characters long...\",\n        },\n    },\n    startDate: {\n      required: \"Start date is required\",\n    },\n    endDate: {\n      required: \"End date is required\",\n      validate: (value) => {\n        if (value && startDate && value < startDate) {\n          return \"End date must be after start date\";\n        }\n      },\n    },\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control\n  } = useForm({\n    validationSchema: validations,\n    mode: \"onBlur\",\n    defaultValues: {\n      StartDatepicker: new Date(),\n      TextField: \"\",\n    }\n  });\n\n  \n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    e.target.reset();\n    console.log(data);\n    alert(JSON.stringify(data));\n  };\n\n  console.log(errors);\n\n  return (\n    <div className=\"ItineraryForm\">\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\" className=\"form\">\n        <fieldset>\n        <h2>Start a New Adventure!</h2>\n        <label>Trip Name</label>\n        <input ref = {register}\n          placeholder=\"Trip to...\"\n        />\n        <p>{errors.tripName?.message}</p>\n        <label>Start Date</label>\n          <Controller\n            control={control}\n            name=\"StartDatepicker\"\n            ref={register}\n            render={({ field }) => (\n              <ReactDatePicker\n                className=\"input\"\n                placeholderText=\"Select Start date\"\n                onChange={(e) => field.onChange(e)}\n                selected={field.value}\n              />\n              )}\n          />\n        <button type=\"Submit\" className=\"button\">Create</button>\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nexport default ItineraryForm;"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAmC,iBAAnC;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAO,4CAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAAA;;EAE1B,MAAM;IAAEC;EAAF,IAAYJ,OAAO,EAAzB;EACA,MAAMK,SAAS,GAAGD,KAAK,CAAC,WAAD,CAAvB;EACA,MAAME,OAAO,GAAGF,KAAK,CAAC,SAAD,CAArB;EACA,MAAMG,WAAW,GAAG;IAClBC,QAAQ,EAAE;MACRC,QAAQ,EAAE,0BADF;MAERC,SAAS,EAAE;QACTC,KAAK,EAAE,CADE;QAETC,OAAO,EAAE;MAFA,CAFH;MAMNC,SAAS,EAAE;QACTF,KAAK,EAAE,EADE;QAETC,OAAO,EAAE;MAFA;IANL,CADQ;IAYlBP,SAAS,EAAE;MACTI,QAAQ,EAAE;IADD,CAZO;IAelBH,OAAO,EAAE;MACPG,QAAQ,EAAE,sBADH;MAEPK,QAAQ,EAAGH,KAAD,IAAW;QACnB,IAAIA,KAAK,IAAIN,SAAT,IAAsBM,KAAK,GAAGN,SAAlC,EAA6C;UAC3C,OAAO,mCAAP;QACD;MACF;IANM;EAfS,CAApB;EAyBA,MAAM;IACJU,QADI;IAEJC,YAFI;IAGJC,SAAS,EAAE;MAAEC;IAAF,CAHP;IAIJC;EAJI,IAKFnB,OAAO,CAAC;IACVoB,gBAAgB,EAAEb,WADR;IAEVc,IAAI,EAAE,QAFI;IAGVC,aAAa,EAAE;MACbC,eAAe,EAAE,IAAIC,IAAJ,EADJ;MAEbC,SAAS,EAAE;IAFE;EAHL,CAAD,CALX;;EAeA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;IAC5BA,CAAC,CAACC,cAAF;IACAD,CAAC,CAACE,MAAF,CAASC,KAAT;IACAC,OAAO,CAACC,GAAR,CAAYN,IAAZ;IACAO,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAD,CAAL;EACD,CALD;;EAOAK,OAAO,CAACC,GAAR,CAAYf,MAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,uBACE;MAAM,QAAQ,EAAEF,YAAY,CAACU,QAAD,CAA5B;MAAwC,YAAY,EAAC,KAArD;MAA2D,SAAS,EAAC,MAArE;MAAA,uBACE;QAAA,wBACA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA;UAAO,GAAG,EAAIX,QAAd;UACE,WAAW,EAAC;QADd;UAAA;UAAA;UAAA;QAAA,QAHA,eAMA;UAAA,8BAAIG,MAAM,CAACV,QAAX,qDAAI,iBAAiBI;QAArB;UAAA;UAAA;UAAA;QAAA,QANA,eAOA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPA,eAQE,QAAC,UAAD;UACE,OAAO,EAAEO,OADX;UAEE,IAAI,EAAC,iBAFP;UAGE,GAAG,EAAEJ,QAHP;UAIE,MAAM,EAAE;YAAA,IAAC;cAAEsB;YAAF,CAAD;YAAA,oBACN,QAAC,eAAD;cACE,SAAS,EAAC,OADZ;cAEE,eAAe,EAAC,mBAFlB;cAGE,QAAQ,EAAGT,CAAD,IAAOS,KAAK,CAACC,QAAN,CAAeV,CAAf,CAHnB;cAIE,QAAQ,EAAES,KAAK,CAAC1B;YAJlB;cAAA;cAAA;cAAA;YAAA,QADM;UAAA;QAJV;UAAA;UAAA;UAAA;QAAA,QARF,eAqBA;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,QAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QArBA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAnFD;;GAAMR,a;UAEcH,O,EAiCdA,O;;;KAnCAG,a;AAqFN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}