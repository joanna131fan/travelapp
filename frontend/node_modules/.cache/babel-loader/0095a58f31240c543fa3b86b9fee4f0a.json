{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n  return event.type !== \"pen\" && event.type !== \"touch\";\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return (event, info) => {\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    if (visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Hover, isActive);\n    }\n\n    callback && callback(event, info);\n  };\n}\n\nfunction useHoverGesture(_ref) {\n  let {\n    onHoverStart,\n    onHoverEnd,\n    whileHover,\n    visualElement\n  } = _ref;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined, {\n    passive: !onHoverStart\n  });\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined, {\n    passive: !onHoverEnd\n  });\n}\n\nexport { useHoverGesture };","map":{"version":3,"names":["AnimationType","usePointerEvent","isDragActive","isMouseEvent","event","type","createHoverEvent","visualElement","isActive","callback","info","animationState","setActive","Hover","useHoverGesture","onHoverStart","onHoverEnd","whileHover","undefined","passive"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs"],"sourcesContent":["import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EACzB,OAAOA,KAAK,CAACC,IAAN,KAAe,KAAf,IAAwBD,KAAK,CAACC,IAAN,KAAe,OAA9C;AACH;;AACD,SAASC,gBAAT,CAA0BC,aAA1B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;EACzD,OAAO,CAACL,KAAD,EAAQM,IAAR,KAAiB;IACpB,IAAI,CAACP,YAAY,CAACC,KAAD,CAAb,IAAwBF,YAAY,EAAxC,EACI;IACJ;AACR;AACA;;IACQ,IAAIK,aAAa,CAACI,cAAlB,EAAkC;MAC9BJ,aAAa,CAACI,cAAd,CAA6BC,SAA7B,CAAuCZ,aAAa,CAACa,KAArD,EAA4DL,QAA5D;IACH;;IACDC,QAAQ,IAAIA,QAAQ,CAACL,KAAD,EAAQM,IAAR,CAApB;EACH,CAVD;AAWH;;AACD,SAASI,eAAT,OAAmF;EAAA,IAA1D;IAAEC,YAAF;IAAgBC,UAAhB;IAA4BC,UAA5B;IAAwCV;EAAxC,CAA0D;EAC/EN,eAAe,CAACM,aAAD,EAAgB,cAAhB,EAAgCQ,YAAY,IAAIE,UAAhB,GACzCX,gBAAgB,CAACC,aAAD,EAAgB,IAAhB,EAAsBQ,YAAtB,CADyB,GAEzCG,SAFS,EAEE;IAAEC,OAAO,EAAE,CAACJ;EAAZ,CAFF,CAAf;EAGAd,eAAe,CAACM,aAAD,EAAgB,cAAhB,EAAgCS,UAAU,IAAIC,UAAd,GACzCX,gBAAgB,CAACC,aAAD,EAAgB,KAAhB,EAAuBS,UAAvB,CADyB,GAEzCE,SAFS,EAEE;IAAEC,OAAO,EAAE,CAACH;EAAZ,CAFF,CAAf;AAGH;;AAED,SAASF,eAAT"},"metadata":{},"sourceType":"module"}