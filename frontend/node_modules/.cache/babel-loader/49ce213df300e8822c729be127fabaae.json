{"ast":null,"code":"import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n/**\n * @internal\n */\n\nclass PanSession {\n  constructor(event, handlers) {\n    let {\n      transformPagePoint\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const info = getPanInfo(this.lastMoveEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      const isDistancePastThreshold = distance2D(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      const {\n        point\n      } = info;\n      const {\n        timestamp\n      } = frameData;\n      this.history.push({ ...point,\n        timestamp\n      });\n      const {\n        onStart,\n        onMove\n      } = this.handlers;\n\n      if (!isPanStarted) {\n        onStart && onStart(this.lastMoveEvent, info);\n        this.startEvent = this.lastMoveEvent;\n      }\n\n      onMove && onMove(this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = (event, info) => {\n      this.lastMoveEvent = event;\n      this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint); // Throttle mouse move event to once per frame\n\n      sync.update(this.updatePoint, true);\n    };\n\n    this.handlePointerUp = (event, info) => {\n      this.end();\n      const {\n        onEnd,\n        onSessionEnd\n      } = this.handlers;\n      const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n\n      if (this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (!isPrimaryPointer(event)) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    const info = extractEventInfo(event);\n    const initialInfo = transformPoint(info, this.transformPagePoint);\n    const {\n      point\n    } = initialInfo;\n    const {\n      timestamp\n    } = frameData;\n    this.history = [{ ...point,\n      timestamp\n    }];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n\n  end() {\n    this.removeListeners && this.removeListeners();\n    cancelSync.update(this.updatePoint);\n  }\n\n}\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_ref, history) {\n  let {\n    point\n  } = _ref;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nexport { PanSession };","map":{"version":3,"names":["extractEventInfo","sync","cancelSync","secondsToMilliseconds","addPointerEvent","pipe","distance2D","frameData","isPrimaryPointer","PanSession","constructor","event","handlers","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","onStart","onMove","handlePointerMove","transformPoint","update","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","window","updateHandlers","subtractPoint","a","b","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","length","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"sources":["/Users/joannafan/Downloads/travelapp-main/frontend/node_modules/framer-motion/dist/es/gestures/PanSession.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}